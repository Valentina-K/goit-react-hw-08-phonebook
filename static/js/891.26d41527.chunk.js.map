{"version":3,"file":"static/js/891.26d41527.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["export const selectFilter = state => state.filter.value;","import { createSelector } from \"@reduxjs/toolkit\";\nimport {selectFilter} from '../filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsList = createSelector(\n    [selectContacts,selectFilter],(items, value) => {\n  if (value === '') return items;\n  return items.filter(item =>\n    item.name.toLocaleLowerCase().includes(value.toLocaleLowerCase())\n  );\n});","import { useState } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\n//import Form from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst nanoid = customAlphabet('1234567890id-', 5);\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInput = nanoid();\n  const phoneInput = nanoid();\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (!contacts.some(contact => contact.name === name)) {\n      dispatch(addContact({ name, number }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={nameInput}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={nameInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <label htmlFor={phoneInput}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id={phoneInput}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n//import { Item } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nconst Contact = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <li>\n      <span>\n        {name}: {phone}\n      </span>\n      <button onClick={() => dispatch(deleteContact(id))}>Delete</button>\n    </li>\n  );\n};\n\nContact.protoTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\n//import { List } from './ContactList.styled';\nimport { selectContactsList } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contactsList = useSelector(selectContactsList);\n  return (\n    <ul>\n      {contactsList.map(contact => (\n        <Contact\n          key={contact.id}\n          name={contact.name}\n          phone={contact.phone}\n          id={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\n//import { FilterBox } from './Filter.styled';\nimport { selectFilter } from 'redux/filter/selectors';\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n  return (\n    <label>\n      <span>Find contact by name</span>\n      <input type=\"text\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"#3d19c0\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n    wrapperClassName=\"Loader\"\n    visible={true}\n  />\n);\n","import { Helmet } from \"react-helmet\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport Filter from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { selectIsLoading, selectError } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n     useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n    return (\n        <>\n            <Helmet>\n                <title>Contacts</title>\n            </Helmet>\n            <h1>Phonebook</h1>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            {isLoading && !error && <Loader />}\n            <ContactList />\n        </>\n    )\n};\n\nexport default Contacts;"],"names":["selectFilter","state","filter","value","selectContacts","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsList","createSelector","item","name","toLocaleLowerCase","includes","nanoid","customAlphabet","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","nameInput","phoneInput","handleChange","evt","target","onSubmit","preventDefault","some","contact","alert","addContact","htmlFor","type","id","pattern","title","required","onChange","Contact","phone","onClick","deleteContact","protoTypes","PropTypes","contactsList","map","e","changeFilter","Loader","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","wrapperClassName","visible","useEffect","fetchContacts","Helmet"],"sourceRoot":""}