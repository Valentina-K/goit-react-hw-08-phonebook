{"version":3,"file":"static/js/755.8f63eba4.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/input/dist/chunk-6XCF7NSR.mjs","../node_modules/@chakra-ui/input/dist/chunk-J356FWKS.mjs","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["// src/input-group.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { cloneElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nvar InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      var _a, _b;\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = (_a = input.height) != null ? _a : input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = (_b = input.height) != null ? _b : input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      var _a, _b;\n      const theming = compact({\n        size: ((_a = child.props) == null ? void 0 : _a.size) || props.size,\n        variant: ((_b = child.props) == null ? void 0 : _b.variant) || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          isolation: \"isolate\"\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport {\n  useInputGroupStyles,\n  InputGroup\n};\n","import {\n  useInputGroupStyles\n} from \"./chunk-6XCF7NSR.mjs\";\n\n// src/input-element.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nvar InputElement = forwardRef(function InputElement2(props, ref) {\n  var _a, _b;\n  const { placement = \"left\", ...rest } = props;\n  const styles = useInputGroupStyles();\n  const input = styles.field;\n  const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n  const elementStyles = {\n    [attr]: \"0\",\n    width: (_a = input == null ? void 0 : input.height) != null ? _a : input == null ? void 0 : input.h,\n    height: (_b = input == null ? void 0 : input.height) != null ? _b : input == null ? void 0 : input.h,\n    fontSize: input == null ? void 0 : input.fontSize,\n    ...styles.element\n  };\n  return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n});\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nvar InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nvar InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport {\n  InputLeftElement,\n  InputRightElement\n};\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Button,\n} from '@chakra-ui/react';\nimport { customAlphabet } from 'nanoid';\nimport { register } from 'redux/auth/operations';\n\nconst nanoid = customAlphabet('1234567890id-', 5);\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n\n  const nameInput = nanoid();\n  const emailInput = nanoid();\n  const passwordInput = nanoid();\n\n  const handleClick = () => setShow(!show);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('name', e.target.elements.name.value);\n    const form = e.target;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <FormControl\n      as=\"form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      isRequired\n    >\n      <FormLabel>Username</FormLabel>\n      <InputGroup>\n        <InputLeftElement />\n        <Input id={nameInput} type=\"text\" name=\"name\" />\n      </InputGroup>\n      <FormLabel>Email</FormLabel>\n      <Input id={emailInput} type=\"email\" name=\"email\" />\n      <FormLabel>Password</FormLabel>\n      <InputGroup size=\"md\">\n        <Input\n          id={passwordInput}\n          name=\"password\"\n          pr=\"4.5rem\"\n          type={show ? 'text' : 'password'}\n          placeholder=\"Enter password\"\n        />\n        <InputRightElement width=\"4.5rem\">\n          <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n            {show ? 'Hide' : 'Show'}\n          </Button>\n        </InputRightElement>\n      </InputGroup>\n      {/* <FormLabel>\n        Password\n        <Input id={passwordInput} type=\"password\" name=\"password\" />\n      </FormLabel> */}\n      <Button type=\"submit\" my={2}>\n        Register\n      </Button>\n    </FormControl>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["createContext","name","errorMessage","InputGroupStylesProvider","useInputGroupStyles","InputGroup","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","children","className","rest","_className","cx","groupStyles","validChildren","getValidChildren","input","field","forEach","child","_a","_b","type","id","paddingStart","height","h","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","compact","size","variant","cloneElement","Object","assign","jsx","chakra","__css","width","display","position","isolation","value","displayName","StyledInputElement","baseStyle","alignItems","justifyContent","top","zIndex","InputElement","placement","attr","elementStyles","fontSize","element","InputLeftElement","InputRightElement","nanoid","customAlphabet","RegisterForm","dispatch","useDispatch","useState","show","setShow","nameInput","emailInput","passwordInput","as","onSubmit","e","preventDefault","console","log","target","elements","form","register","email","password","reset","autoComplete","isRequired","I","pr","placeholder","onClick","my","Register","Helmet"],"sourceRoot":""}